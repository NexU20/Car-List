/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import Business.CarList;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ankit
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    CarList cc;
    int selectedRow;
    public ViewJPanel(CarList cc) {
        initComponents();
        selectedRow=0;
        this.cc=cc;
        populateTable();
    }
    
    public void populateTable(){
        
        DefaultTableModel dtm = (DefaultTableModel) viewCarsJTable.getModel();
        
        dtm.setRowCount(0);
        
        for(Car c : cc.getCarCatalogue()){
            
            Object [] row= new Object[4];
            row[0]= c;
            row[1]=c.getManufacturer();
            row[2]=c.getModelNumber();
            String name = c.getIsAvailable()?"Yes":"No";
            row[3]=name;
            dtm.addRow(row);
        }
        
    }
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        isAvalButtonGroup = new javax.swing.ButtonGroup();
        manCertButtonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewCarsJTable = new javax.swing.JTable();
        manTxtField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        serNumTxtField = new javax.swing.JTextField();
        modTxtField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        manYearTxtField = new javax.swing.JTextField();
        noOfSeatsTxtField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cityTxtField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        viewDetailsJBtn = new javax.swing.JButton();
        updateDetailsBtn = new javax.swing.JButton();
        deleteDetailsBtn = new javax.swing.JButton();
        yesJRadioButton = new javax.swing.JRadioButton();
        noJRadioButton = new javax.swing.JRadioButton();
        expiredJRadioButton = new javax.swing.JRadioButton();
        validJRadioButton = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(18, 18, 18));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Lihat Mobil");

        viewCarsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nomor Seri", "Pabrikan", "Nomor Model", "Tersedia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewCarsJTable);

        manTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manTxtFieldActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Pabrikan");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nomor Seri");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nomor Model");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tahun Produksi");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Jumlah Penumpang");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Kota");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Tersedia");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Sertifikat");

        viewDetailsJBtn.setBackground(new java.awt.Color(2, 132, 199));
        viewDetailsJBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        viewDetailsJBtn.setForeground(new java.awt.Color(255, 255, 255));
        viewDetailsJBtn.setText("View Car Details");
        viewDetailsJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsJBtnActionPerformed(evt);
            }
        });

        updateDetailsBtn.setBackground(new java.awt.Color(132, 204, 22));
        updateDetailsBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateDetailsBtn.setText("Update Details");
        updateDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDetailsBtnActionPerformed(evt);
            }
        });

        deleteDetailsBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteDetailsBtn.setText("Delete Car Details");
        deleteDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDetailsBtnActionPerformed(evt);
            }
        });

        yesJRadioButton.setBackground(new java.awt.Color(18, 18, 18));
        isAvalButtonGroup.add(yesJRadioButton);
        yesJRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        yesJRadioButton.setSelected(true);
        yesJRadioButton.setText("Yes");

        isAvalButtonGroup.add(noJRadioButton);
        noJRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        noJRadioButton.setText("No");

        manCertButtonGroup.add(expiredJRadioButton);
        expiredJRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        expiredJRadioButton.setText("Expired");

        manCertButtonGroup.add(validJRadioButton);
        validJRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        validJRadioButton.setSelected(true);
        validJRadioButton.setText("Valid");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(326, 326, 326)
                        .addComponent(viewDetailsJBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(updateDetailsBtn)
                        .addGap(134, 134, 134)
                        .addComponent(deleteDetailsBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 837, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(111, 111, 111)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(noOfSeatsTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(yesJRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(noJRadioButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(validJRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(expiredJRadioButton))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(serNumTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(modTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(manYearTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(manTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewDetailsJBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(manTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(serNumTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(modTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(manYearTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(noOfSeatsTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addComponent(jLabel7))
                    .addComponent(cityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(yesJRadioButton)
                    .addComponent(noJRadioButton))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(validJRadioButton)
                        .addComponent(expiredJRadioButton))
                    .addComponent(jLabel9))
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void manTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manTxtFieldActionPerformed

    private void viewDetailsJBtnActionPerformed(java.awt.event.ActionEvent evt) {
        selectedRow = viewCarsJTable.getSelectedRow();
    
        if (selectedRow >= 0) {
            Car selectedCar = (Car) viewCarsJTable.getValueAt(selectedRow, 0);
    
            // Set values to text fields
            cityTxtField.setText(selectedCar.getCity());
    
            // Set isAvailable radio button
            if (selectedCar.getIsAvailable()) {
                isAvalButtonGroup.clearSelection();
                yesJRadioButton.setSelected(true);
            } else {
                isAvalButtonGroup.clearSelection();
                noJRadioButton.setSelected(true);
            }
    
            // Set mainCert radio button
            String manCert = selectedCar.getMainCert();
            if (manCert.equalsIgnoreCase("Expired")) {
                manCertButtonGroup.clearSelection();
                expiredJRadioButton.setSelected(true);
            } else {
                manCertButtonGroup.clearSelection();
                validJRadioButton.setSelected(true);
            }
    
            manTxtField.setText(selectedCar.getManufacturer());
            manYearTxtField.setText(String.valueOf(selectedCar.getManYear()));
            modTxtField.setText(selectedCar.getModelNumber());
            noOfSeatsTxtField.setText(String.valueOf(selectedCar.getNoOfSeats()));
            serNumTxtField.setText(selectedCar.getSerialNum());
    
        } else {
            JOptionPane.showMessageDialog(null, "Mohon Pilih Baris Yang Ingin Dilihat");
        }
    }                                               

    private void deleteDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {
        int selectedRow = viewCarsJTable.getSelectedRow();
        
        if (selectedRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus Data Yang Dipilih?", "Warning", dialogButton);
            
            if (dialogResult == JOptionPane.YES_OPTION) {
                Car selectedCar = (Car) viewCarsJTable.getValueAt(selectedRow, 0);
                cc.removeCar(selectedCar);
                JOptionPane.showMessageDialog(null, "Berhasil Dihapus.");
                
                // Refresh the table
                populateTable();
                
                // Clear text fields
                clearTextFields();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mohon Memilih Baris Yang Ingin Dihapus");
        }
    }                                                

    private void updateDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // Check if a row is selected
        if (selectedRow >= 0) {
            Car selectedCar = (Car) viewCarsJTable.getValueAt(selectedRow, 0);

            // Check if any required field is empty
            if (cityTxtField.getText().equals("") || modTxtField.getText().equals("") || manTxtField.getText().equals("")
                    || serNumTxtField.getText().equals("") || manYearTxtField.getText().equals("")
                    || noOfSeatsTxtField.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Pilih Baris Yang Ingin Dilihat Terlebih Dahulu. Dan Pastikan Semua Field Terisi.");
            } else {
                // Extract and validate input values
                String manufacturer = manTxtField.getText();
                int manYear = 0, countError = 0;

                try {
                    manYear = Integer.parseInt(manYearTxtField.getText());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Masukan Angka Numerik Untuk Tahun Produksi");
                    countError++;
                }

                String serialNum = serNumTxtField.getText();
                int noOfSeats = 0;

                try {
                    noOfSeats = Integer.parseInt(noOfSeatsTxtField.getText());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Jumlah Penumpang Harus Berupa Angka");
                    countError++;
                }

                String modelNumber = modTxtField.getText();
                String city = cityTxtField.getText();
                String mainCert = null;
                Boolean isAvailable = false;
                String isAval = null;

                // Extract selected values from radio button groups
                isAval = getSelectedButtonText(isAvalButtonGroup);
                mainCert = getSelectedButtonText(manCertButtonGroup);

                // Check if there are any validation errors
                if (countError == 0) {
                    // Check if the selected row matches the current selected row
                    if (viewCarsJTable.getSelectedRow() != selectedRow) {
                        JOptionPane.showMessageDialog(null, "Please view details of the current selected row first.");

                        // Clear text fields
                        clearTextFields();
                    } else {
                        // Update the car details
                        selectedCar.setCity(city);
                        selectedCar.setIsAvailable(isAvailable);
                        selectedCar.setMainCert(mainCert);
                        selectedCar.setManYear(manYear);
                        selectedCar.setManufacturer(manufacturer);
                        selectedCar.setModelNumber(modelNumber);
                        selectedCar.setNoOfSeats(noOfSeats);
                        selectedCar.setSerialNum(serialNum);

                        // Set update time
                        String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new java.util.Date());
                        cc.setUpdateTime(timeStamp);

                        JOptionPane.showMessageDialog(null, "Berhasil Diperbarui !!!");

                        // Refresh the table
                        populateTable();

                        // Clear text fields
                        clearTextFields();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please view details first.");
        }
    }

    // Helper method to get the selected radio button text
    private String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements(); ) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }

    // Helper method to clear text fields
    private void clearTextFields() {
        manTxtField.setText("");
        manYearTxtField.setText("");
        serNumTxtField.setText("");
        noOfSeatsTxtField.setText("");
        modTxtField.setText("");
        cityTxtField.setText("");
    }
                                                


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cityTxtField;
    private javax.swing.JButton deleteDetailsBtn;
    private javax.swing.JRadioButton expiredJRadioButton;
    private javax.swing.ButtonGroup isAvalButtonGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup manCertButtonGroup;
    private javax.swing.JTextField manTxtField;
    private javax.swing.JTextField manYearTxtField;
    private javax.swing.JTextField modTxtField;
    private javax.swing.JRadioButton noJRadioButton;
    private javax.swing.JTextField noOfSeatsTxtField;
    private javax.swing.JTextField serNumTxtField;
    private javax.swing.JButton updateDetailsBtn;
    private javax.swing.JRadioButton validJRadioButton;
    private javax.swing.JTable viewCarsJTable;
    private javax.swing.JButton viewDetailsJBtn;
    private javax.swing.JRadioButton yesJRadioButton;
    // End of variables declaration//GEN-END:variables
}
